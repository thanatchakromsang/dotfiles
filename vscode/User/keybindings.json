// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "f2",
        "command": "workbench.view.explorer",
        "when": "editorTextFocus"
    },
    {
        "key": "f2",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletVisible"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "space",
        "command": "editor.fold",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    //// Folding toggle don't work yet use <RETURN> to unfold
    // {
    //     "key": "space",
    //     "command": "-editor.fold",
    //     "when": "vim.mode == 'Normal' && editorTextFocus"
    // }
    // Vim switch pane binding (Vim like behavior)
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusPreviousGroup"
    },
    ///////////////////////////////////
    // Use <leader>v instead
    ///////////////////////////////////
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    // Use <C-k> instead of tab
    {
        "key": "ctrl+k",
        "command": "acceptSelectedSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    ///////////////////////////////////
    // <C-n> <C-p> to move up down in Quickopen
    ///////////////////////////////////
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    ///////////////////////////////////
    // Toggle find
    ///////////////////////////////////
    {
        "key": "ctrl+f",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "shift+escape",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
    },
    {
        "key": "shift+escape",
        "command": "-workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
    },
    ///////////////////////////////////
    // <C-k> to expand (map tab to C-k)
    ///////////////////////////////////
    {
        "key": "tab",
        "command": "-acceptSelectedSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "-insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "tab",
        "command": "-jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "ctrl+k",
        "command": "editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "tab",
        "command": "-editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    ///////////////////////////////////
    // <leader>sh to -> terminal <ESC> to escape terminal
    ///////////////////////////////////
    {
        "key": "escape",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "Ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
    },
    ///////////////////////////////////
    // Navigate search with <C-n>, <C-p>
    ///////////////////////////////////
    {
        "key": "ctrl+n",
        "command": "search.action.focusNextSearchResult",
        "when": "searchViewletVisible"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult"
    },
    {
        "key": "ctrl+p",
        "command": "search.action.focusPreviousSearchResult",
        "when": "searchViewletVisible"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult"
    },
    ///////////////////////////////////
    // Toggle Searchbox with <ESC>
    ///////////////////////////////////
    {
        "key": "escape",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "f4",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    ///////////////////////////////////
    // <C-n> <C-p> for search result like vim
    ///////////////////////////////////
    ///////////////////////////////////
    // for <C-f> find <C-n>, <C-p>
    ///////////////////////////////////
    {
        "key": "ctrl+n",
        "command": "editor.action.nextMatchFindAction",
        "when": "findWidgetVisible"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.previousMatchFindAction",
        "when": "findWidgetVisible"
    },
    {
        "key": "shift+f3",
        "command": "-editor.action.previousMatchFindAction",
    },
    // Disable unusable key for search
    {
        "key": "ctrl+f3",
        "command": "-editor.action.nextSelectionMatchFindAction",
    },
    {
        "key": "ctrl+shift+f3",
        "command": "-editor.action.previousSelectionMatchFindAction",
    },
    ///////////////////////////////////
    // F4 to toggle search
    ///////////////////////////////////
    {
        "key": "f4",
        "command": "workbench.action.findInFiles",
        "when": "!searchInputBoxFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles",
        "when": "!searchInputBoxFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    ///////////////////////////////////
    // Project manager
    ///////////////////////////////////
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inProjectManagerList"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inProjectManagerList"
    },
    // use <leader> instead
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
]